const {
  GoogleGenerativeAI,
  HarmCategory,
  HarmBlockThreshold,
} = require("@google/generative-ai");

const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey);

const model = genAI.getGenerativeModel({
  model: "gemini-1.5-flash",
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 64,
  maxOutputTokens: 8192,
  responseMimeType: "application/json",
};

export const GenerateCourseLayout_AI = model.startChat({
  generationConfig,
  // safetySettings: Adjust safety settings
  // See https://ai.google.dev/gemini-api/docs/safety-settings
  //   history: [
  //     {
  //       role: "user",
  //       parts: [
  //         {text: "Generate A Course Tutorial on following Details With field as Course Name,Description,Along with Chapter Name,about,Duration:Category:'Programming',Topic:Python,Level:Basic,Duration:1 hours,noofchapters:5, in JSON format"},
  //       ],
  //     },
  //     {
  //       role: "model",
  //       parts: [
  //         {text: "json\n{\n  \"courseName\": \"Python Fundamentals for Beginners\",\n  \"description\": \"This course provides a comprehensive introduction to the Python programming language, covering the essential concepts and techniques needed to write basic Python programs.\",\n  \"chapters\": [\n    {\n      \"name\": \"Introduction to Python\",\n      \"about\": \"This chapter introduces the Python programming language, its history, key features, and why it's a popular choice for beginners and experienced developers alike.\",\n      \"duration\": \"30 minutes\"\n    },\n    {\n      \"name\": \"Basic Data Types and Variables\",\n      \"about\": \"This chapter explores fundamental Python data types such as integers, floats, strings, and booleans. It also covers how to declare and manipulate variables.\",\n      \"duration\": \"20 minutes\"\n    },\n    {\n      \"name\": \"Operators and Expressions\",\n      \"about\": \"This chapter introduces different types of operators in Python, including arithmetic, comparison, logical, and bitwise operators. It also explains how to form expressions and evaluate them.\",\n      \"duration\": \"15 minutes\"\n    },\n    {\n      \"name\": \"Control Flow Statements\",\n      \"about\": \"This chapter covers essential control flow statements in Python, such as conditional statements (if, elif, else) and looping statements (for, while).\",\n      \"duration\": \"15 minutes\"\n    },\n    {\n      \"name\": \"Functions and Modules\",\n      \"about\": \"This chapter introduces the concept of functions in Python, explaining how to define and call them. It also covers how to use built-in modules and create custom modules.\",\n      \"duration\": \"10 minutes\"\n    }\n  ],\n  \"category\": \"Programming\",\n  \"topic\": \"Python\",\n  \"level\": \"Basic\",\n  \"duration\": \"1 hour\",\n  \"noOfChapters\": 5\n}\n\n"},
  //       ],
  //     },
  //   ],
  history: [
    {
      role: "user",
      parts: [
        {
          text: "Genarate A Course Tutorial on following Details With field as Course Name,Description,Along with Chapter Name,about,Duration and generate 5 multiple-choice questions (MCQs) per chapter based on the content:Category:'Programming',Topic:Python,Level:Basic,Duration:1 hours,noofchapters:5, in JSON format\n",
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: 'json\n{\n  "course_name": "Python Programming Fundamentals",\n  "description": "This course introduces the fundamental concepts of Python programming, suitable for beginners with no prior coding experience. You will learn how to write simple programs, understand basic data types and operators, control flow, functions, and modules.",\n  "chapters": [\n    {\n      "chapter_name": "Introduction to Python",\n      "about": "This chapter provides an overview of Python programming language, its history, advantages, and applications. You will learn how to install Python and set up your development environment.",\n      "duration": "20 minutes",\n      "mcqs": [\n        {\n          "question": "What is Python primarily used for?",\n          "options": [\n            "Web development",\n            "Data science",\n            "Game development",\n            "All of the above"\n          ],\n          "answer": "All of the above"\n        },\n        {\n          "question": "Which of the following is a valid Python identifier?",\n          "options": [\n            "123abc",\n            "my_variable",\n            "my-variable",\n            "my variable"\n          ],\n          "answer": "my_variable"\n        },\n        {\n          "question": "What is the purpose of the \'print()\' function in Python?",\n          "options": [\n            "To display output on the screen",\n            "To define a variable",\n            "To create a function",\n            "To comment out code"\n          ],\n          "answer": "To display output on the screen"\n        },\n        {\n          "question": "What is the output of the following code:\\npython\\nprint(\'Hello, World!\')\\n",\n          "options": [\n            "Hello, World!",\n            "print(\'Hello, World!\')",\n            "None",\n            "Error"\n          ],\n          "answer": "Hello, World!"\n        },\n        {\n          "question": "Which of the following is a valid Python comment?",\n          "options": [\n            "// This is a comment",\n            "# This is a comment",\n            "/* This is a comment /",\n            "<!-- This is a comment -->"\n          ],\n          "answer": "# This is a comment"\n        }\n      ]\n    },\n    {\n      "chapter_name": "Data Types and Operators",\n      "about": "This chapter introduces basic data types in Python, including integers, floats, strings, and booleans. You will learn about different operators used for arithmetic, comparison, and logical operations.",\n      "duration": "25 minutes",\n      "mcqs": [\n        {\n          "question": "Which data type represents whole numbers in Python?",\n          "options": [\n            "int",\n            "float",\n            "str",\n            "bool"\n          ],\n          "answer": "int"\n        },\n        {\n          "question": "What is the result of the following expression:\\npython\\n5 + 2 * 3\\n",\n          "options": [\n            "11",\n            "21",\n            "15",\n            "7"\n          ],\n          "answer": "11"\n        },\n        {\n          "question": "Which operator is used for modulo division in Python?",\n          "options": [\n            "+",\n            "-",\n            "",\n            "%"\n          ],\n          "answer": "%"\n        },\n        {\n          "question": "What is the output of the following code:\\npython\\nprint(\'Hello\' + \' \' + \'World!\')\\n",\n          "options": [\n            "Hello World!",\n            "Hello + World!",\n            "Error",\n            "None"\n          ],\n          "answer": "Hello World!"\n        },\n        {\n          "question": "Which data type is used to represent True or False values in Python?",\n          "options": [\n            "int",\n            "float",\n            "str",\n            "bool"\n          ],\n          "answer": "bool"\n        }\n      ]\n    },\n    {\n      "chapter_name": "Control Flow",\n      "about": "This chapter explores control flow statements in Python, including \'if-else\', \'for\' loop, and \'while\' loop. You will learn how to execute different blocks of code based on conditions and iterate over sequences.",\n      "duration": "25 minutes",\n      "mcqs": [\n        {\n          "question": "What is the purpose of the \'if-else\' statement in Python?",\n          "options": [\n            "To execute code repeatedly",\n            "To choose between different blocks of code",\n            "To define a function",\n            "To declare a variable"\n          ],\n          "answer": "To choose between different blocks of code"\n        },\n        {\n          "question": "What is the output of the following code:\\npython\\nfor i in range(5):\\n  print(i)\\n",\n          "options": [\n            "0 1 2 3 4",\n            "1 2 3 4 5",\n            "5",\n            "Error"\n          ],\n          "answer": "0 1 2 3 4"\n        },\n        {\n          "question": "Which loop continues to execute as long as a condition is True?",\n          "options": [\n            "for loop",\n            "while loop",\n            "if-else loop",\n            "None of the above"\n          ],\n          "answer": "while loop"\n        },\n        {\n          "question": "What is the purpose of the \'break\' statement in a loop?",\n          "options": [\n            "To exit the loop immediately",\n            "To skip the current iteration",\n            "To continue to the next iteration",\n            "To define a variable"\n          ],\n          "answer": "To exit the loop immediately"\n        },\n        {\n          "question": "Which of the following is a valid Python \'if-else\' statement syntax?",\n          "options": [\n            "if condition:\\n  code block\\nelse:\\n  code block",\n            "if condition:\\n  code block\\n  else:\\n  code block",\n            "if condition\\n  code block\\n  else\\n  code block",\n            "None of the above"\n          ],\n          "answer": "if condition:\\n  code block\\nelse:\\n  code block"\n        }\n      ]\n    },\n    {\n      "chapter_name": "Functions and Modules",\n      "about": "This chapter introduces functions as reusable blocks of code that perform specific tasks. You will learn how to define and call functions, pass arguments, and use built-in modules.",\n      "duration": "25 minutes",\n      "mcqs": [\n        {\n          "question": "What is the purpose of a function in Python?",\n          "options": [\n            "To store data",\n            "To perform a specific task",\n            "To declare a variable",\n            "To control the flow of the program"\n          ],\n          "answer": "To perform a specific task"\n        },\n        {\n          "question": "Which keyword is used to define a function in Python?",\n          "options": [\n            "def",\n            "function",\n            "class",\n            "module"\n          ],\n          "answer": "def"\n        },\n        {\n          "question": "What is the output of the following code:\\npython\\ndef greet(name):\\n  print(\'Hello, \' + name + \'!\')\\ngreet(\'John\')\\n",\n          "options": [\n            "Hello, John!",\n            "greet(\'John\')",\n            "None",\n            "Error"\n          ],\n          "answer": "Hello, John!"\n        },\n        {\n          "question": "What is the purpose of the \'import\' statement in Python?",\n          "options": [\n            "To define a function",\n            "To declare a variable",\n            "To access modules and their functions",\n            "To control the flow of the program"\n          ],\n          "answer": "To access modules and their functions"\n        },\n        {\n          "question": "Which module provides mathematical functions in Python?",\n          "options": [\n            "math",\n            "random",\n            "os",\n            "datetime"\n          ],\n          "answer": "math"\n        }\n      ]\n    },\n    {\n      "chapter_name": "Lists, Tuples, and Dictionaries",\n      "about": "This chapter covers common data structures in Python, including lists, tuples, and dictionaries. You will learn how to create, access, modify, and iterate over these structures.",\n      "duration": "20 minutes",\n      "mcqs": [\n        {\n          "question": "Which data structure is mutable (can be modified) in Python?",\n          "options": [\n            "list",\n            "tuple",\n            "dictionary",\n            "None of the above"\n          ],\n          "answer": "list"\n        },\n        {\n          "question": "What is the output of the following code:\\npython\\nmy_list = [1, 2, 3]\\nprint(my_list[1])\\n",\n          "options": [\n            "1",\n            "2",\n            "3",\n            "Error"\n          ],\n          "answer": "2"\n        },\n        {\n          "question": "Which data structure is used to store key-value pairs in Python?",\n          "options": [\n            "list",\n            "tuple",\n            "dictionary",\n            "None of the above"\n          ],\n          "answer": "dictionary"\n        },\n        {\n          "question": "What is the output of the following code:\\npython\\nmy_tuple = (1, 2, 3)\\nprint(my_tuple[0])\\n",\n          "options": [\n            "1",\n            "2",\n            "3",\n            "Error"\n          ],\n          "answer": "1"\n        },\n        {\n          "question": "Which of the following is a valid way to access a value from a dictionary in Python?",\n          "options": [\n            "my_dictionary[key]",\n            "my_dictionary.get(key)",\n            "Both A and B",\n            "None of the above"\n          ],\n          "answer": "Both A and B"\n        }\n      ]\n    }\n  ]\n}\n',
        },
      ],
    },
  ],
});

//     const result = await chatSession.sendMessage("INSERT_INPUT_HERE");
//     console.log(result.response.text());
//   }

export const GenerateChapterContent_AI = model.startChat({
  generationConfig,
  // safetySettings: Adjust safety settings
  // See https://ai.google.dev/gemini-api/docs/safety-settings
  history: [
    {
      role: "user",
      parts: [
        {
          text: "Explain the concept in Detail on Topic: Hadoop  2027, Chapter:Hadoop Fundamentals, in JSON Format with list of array with field as title, description in detail, Code Example ( Code field in <precode> format) if applicable",
        },
      ],
    },
    {
      role: "model",
      parts: [
        {
          text: '```json\n[\n  {\n    "title": "Introduction to Hadoop",\n    "description": "Hadoop is an open-source framework for storing and processing large datasets. It was originally developed by Yahoo! and has since become a popular choice for Big Data analytics. Hadoop is designed to handle data that is too large to be processed by traditional relational databases.",\n    "code": ""\n  },\n  {\n    "title": "Hadoop Architecture",\n    "description": "Hadoop\'s architecture is based on two core components:\\n\\n* **Hadoop Distributed File System (HDFS):** A distributed file system that stores data across multiple nodes in a cluster. HDFS is highly fault-tolerant and provides high throughput for reading and writing data.\\n* **Yet Another Resource Negotiator (YARN):** A resource management system that manages the cluster\'s resources and schedules tasks for execution. YARN allows users to run different types of applications on the same cluster.",\n    "code": ""\n  },\n  {\n    "title": "HDFS Concepts",\n    "description": "HDFS uses a hierarchical file system, similar to traditional file systems. Here are some key concepts:\\n\\n* **NameNode:** The master node that manages the file system\'s metadata. It tracks the location of data blocks and provides access control for users.\\n* **DataNode:** Slave nodes that store data blocks. They are responsible for reading and writing data to the file system.\\n* **Block:** A unit of data in HDFS. Each file is split into multiple blocks and stored across different DataNodes.\\n* **Replication:** Data blocks are replicated across multiple DataNodes for fault tolerance. This ensures that data is available even if a node fails.",\n    "code": ""\n  },\n  {\n    "title": "MapReduce",\n    "description": "MapReduce is a programming model for processing large datasets in parallel. It consists of two main stages:\\n\\n* **Map:**  This stage transforms input data into key-value pairs. Each key is associated with a value. The map function is applied to each input data record independently.\\n* **Reduce:**  This stage combines the key-value pairs generated by the map stage. The reduce function is applied to each key and its associated values, producing a final output.\\n\\nMapReduce jobs are typically executed by the YARN framework on the Hadoop cluster.",\n    "code": "<precode>\\n# Example MapReduce code\\nfrom pyspark import SparkContext\\n\\n# Create a SparkContext object\\nsc = SparkContext()\\n\\n# Load the input data\\ntext_file = sc.textFile(\'hdfs://localhost:9000/input.txt\')\\n\\n# Define the map function\\ndef map_function(line):\\n  words = line.split(\' \')\\n  for word in words:\\n    yield (word, 1)\\n\\n# Define the reduce function\\ndef reduce_function(a, b):\\n  return a + b\\n\\n# Apply the map and reduce operations\\ncounts = text_file.flatMap(map_function).reduceByKey(reduce_function)\\n\\n# Print the results\\ncounts.collect()\\n</precode>"\n  },\n  {\n    "title": "Hadoop Ecosystem",\n    "description": "Hadoop is part of a larger ecosystem of tools and technologies that work together to manage and analyze Big Data. Some of the key components of the Hadoop ecosystem include:\\n\\n* **Hive:**  A data warehouse system built on top of Hadoop that allows users to query data using SQL-like syntax.\\n* **Pig:**  A high-level data flow language that simplifies the development of MapReduce jobs.\\n* **HBase:** A NoSQL database built on top of HDFS that provides fast, random access to data.\\n* **ZooKeeper:**  A distributed coordination service that helps manage the Hadoop cluster.",\n    "code": ""\n  },\n  {\n    "title": "Hadoop Use Cases",\n    "description": "Hadoop is used in a wide range of industries and applications, including:\\n\\n* **Data warehousing:** Storing and analyzing large volumes of data from various sources.\\n* **Log analysis:** Processing and analyzing log files from websites, applications, and other systems.\\n* **Social media analytics:** Understanding user behavior and trends from social media platforms.\\n* **Scientific computing:** Performing complex simulations and data analysis in fields such as astronomy, genomics, and climate science.\\n* **Fraud detection:** Analyzing data to identify fraudulent activities in financial transactions.",\n    "code": ""\n  }\n]\n```',
        },
      ],
    },
  ],
});
